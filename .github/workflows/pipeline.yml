name: Build, Test and Analyze

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  linux_release:
    name: Linux Release
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install recent CMake
        run: sh .github/install_cmake.sh /tmp/cmake

      - name: Configure project
        run: /tmp/cmake/bin/cmake -S . -B .build -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/clang11_linux_x86_64.cmake -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: /tmp/cmake/bin/cmake --build .build

      #- name: Tests and Memcheck
      #  run: /tmp/cmake/bin/ctest ...

  linux_debug:
    name: Linux Debug
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install recent CMake
        run: sh .github/install_cmake.sh /tmp/cmake

      - name: Configure project
        run: /tmp/cmake/bin/cmake -S . -B .build -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/clang11_linux_x86_64.cmake -DCMAKE_BUILD_TYPE=Debug

      - name: Build project
        run: /tmp/cmake/bin/cmake --build .build

      #- name: Test and Memcheck
      #  run: /tmp/cmake/bin/ctest ...

  static-anlysis:
    name: Static code analysis
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install recent CMake
        run: sh .github/install_cmake.sh /tmp/cmake

        # get toolchain and external dependencies
      - name: Configure project
        run: /tmp/cmake/bin/cmake -S . -B .build -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/clang11_linux_x86_64.cmake

      - name: Run clang-format
        run: bash .github/run-clang-format.sh cpp/ -v

      - name: Run clang-tidy
        run: bash .github/run-clang-tidy.sh cpp/ -v
